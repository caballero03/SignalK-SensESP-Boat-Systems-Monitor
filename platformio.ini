; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

; NOTE: This is an example platformio.ini file to be used as a template for
; derived projects. Do not use the file within the SensESP directory tree but
; instead create a new project in PlatformIO and copy this file and one of the
; example source files there.

[platformio]
;set default_envs to whichever board(s) you use. Build/Run/etc processes those envs
default_envs = 
   esp32dev

[env]
; Global data for all [env:***]
framework = arduino
lib_ldf_mode = deep
monitor_speed = 115200
lib_deps =
   adafruit/Adafruit ADS1X15@^2.5.0
   adafruit/Adafruit SSD1306@^2.5.1
   SignalK/SensESP@>=3.0.0-beta.3,<4.0.0-alpha.1
   SensESP/OneWire@^3.0.1

;this section has config items common to all ESP32 boards
[espressif32_base]
platform = espressif32
build_unflags = -Werror = reorder
; board_build.partitions = min_spiffs.csv
board_build.partitions = huge_app.csv
monitor_filters = esp32_exception_decoder

[env:esp32dev]
extends = espressif32_base
board = esp32dev
; Verify that this is the correct pin number for your board!
build_flags = 
   -D LED_BUILTIN=2
; uncomment and change these if PlatformIO can't auto-detect
; the ports
;upload_port = /dev/tty.SLAB_USBtoUART
;monitor_port = /dev/tty.SLAB_USBtoUART

   ; Max (and default) debugging level in Arduino ESP32 Core
   -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_VERBOSE
   ; Arduino Core bug workaround: define the log tag for the Arduino
   ; logging macros.
   -D TAG='"ARDUINO"'
   ; Use the ESP-IDF logging library - required by SensESP.
   -D USE_ESP_IDF_LOG
